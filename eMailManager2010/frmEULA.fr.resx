<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextBox1.Text" xml:space="preserve">
    <value>Email Manager CONTRAT DE LICENCE UTILISATEUR FINAL 

S'il vous plaît lire attentivement ce document avant de procéder. En installant et en utilisant ce logiciel, vous confirmez votre acceptation du logiciel et en acceptant d'être lié par les termes du présent Accord. Si vous ne souhaitez pas le faire, désinstallez le logiciel.
 
1. DISTRIBUTION 

Email Manager est distribué "tel quel". Aucune garantie d'aucune sorte, expresse ou implicite. Vous utilisez à vos propres risques. L'auteur ne sera pas responsable de la perte de données, dommages, pertes de profits ou de tout autre type de perte lors de l'utilisation ou la mauvaise utilisation de ce logiciel.
 
Vous ne pouvez pas fabriquer ou distribuer des copies du logiciel. Vous ne pouvez pas décompiler, désosser, démonter ou autrement réduire le logiciel Email Manager à une forme perceptible par l'homme. Vous ne pouvez pas modifier, louer, revendre à profit, distribuer ou créer des œuvres dérivées basées sur Email Manager ou toute partie de celui-ci.
 
2. LICENCE 

Tous les copyrights de Email Manager sont la propriété exclusive de l'auteur - Russell Green.
 
Une fois inscrit, l'utilisateur se voit accorder une licence non exclusive d'utilisation Email Manager sur un ordinateur ou autant d'ordinateurs que de licences sont achetées. Le logiciel Email Manager ne peut pas être loué, mais peut être transféré définitivement, si la personne qui accepte de recevoir termes de cette licence.
 
Toute utilisation non autorisée entraînera la résiliation immédiate et automatique de cette licence et peut entraîner des poursuites criminelles et / ou civile.
 
Noms Email Manager et tout logo ou fichier graphique qui représente notre logiciel ne peut pas être utilisé en aucune façon à promouvoir d'autres produits. Toutes les parties de ce logiciel et les produits sont protégés par copyright. Aucun programme de la séquence, le code, partie, image, clip vidéo, d'échantillonnage audio, texte ou des images générées par ordinateur peuvent être copiés ou utilisés de quelque manière par l'utilisateur, sauf tel que prévu dans les limites du programme d'utilisateur unique.
 
Tous les droits non expressément accordés ici sont réservés par Russell Green. 

Installation et utilisation Email Manager entraîne l'acceptation de ces termes et conditions de la licence.
 
Si vous n'acceptez pas les termes de cette licence, vous devez supprimer les fichiers Email Manager de vos périphériques de stockage et cesser d'utiliser le produit.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Contrat de Licence Utilisateur Final</value>
  </data>
  <data name="OK_Button.Text" xml:space="preserve">
    <value>Bien</value>
  </data>
</root>